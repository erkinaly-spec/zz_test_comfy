name: Build and Deploy ComfyUI to RunPod

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    if: github.actor != 'dependabot[bot]'
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=raw,value=latest
          type=sha,format=short,prefix=sha-

    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        platforms: linux/amd64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy-to-runpod:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master') && github.event_name != 'pull_request' && github.actor != 'dependabot[bot]'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Deploy to RunPod
      uses: runpod/runpod-action@v1
      with:
        api-key: ${{ secrets.RUNPOD_API_KEY }}
        template: runpod-template.json
        image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

    - name: Test deployment
      run: |
        echo "Waiting for deployment to be ready..."
        sleep 30
        
        # Test endpoint if RUNPOD_ENDPOINT is provided
        if [ -n "${{ secrets.RUNPOD_ENDPOINT }}" ]; then
          echo "Testing endpoint..."
          curl -X POST "${{ secrets.RUNPOD_ENDPOINT }}/run" \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ secrets.RUNPOD_API_KEY }}" \
            -d '{"input": {"workflow": {"test": "node"}}}' || echo "Test failed - endpoint might still be starting"
        fi
